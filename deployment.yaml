apiVersion: apps/v1
kind: Deployment
metadata:
  name: aspnetapp
spec:
  selector:
    matchLabels:
      run: aspnetapp
  replicas: 1
  template:
    metadata:
      name: aspnetapp
      labels:
        run: aspnetapp
    spec:
      containers:
      - name: aspnetapp
        image: jumasta/aspnetapp
        ports:
        - containerPort: 8080
        resources:
          limits:
            memory: 256M   # так как нам нужен
            cpu: 400m # до разогретого кэша первые запросы нужно в 4 раза больше ресурсов, чтобы была возможность их обрабатывать и кубер не душил наш контейнер увеличим лимит
          requests:
            memory: 128M   # так как по условию всегда ровно 128M эти значения нам нужны по-любому и значение должно позволять разместить под на ноде
            cpu: 100m # так как большую часть времени будет 0.1 выберем данное значение, которое будет достаточно и позволит разместиться так как оно не особо большое
---



apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: aspnetapp-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: aspnetapp
  minReplicas: 1
  maxReplicas: 5 # Так как у нас 5 нод и мы хотим минимального потребления ресурсов и максимально отказоустойчивого,
  # лучше будет распределять нагрузку по 5 подам на каждой ноде
  # так как мы хотим минимального потребления ресурсов от этого deploymenta устанавливаем 0.1.
  # Как я понимаю 0.1 нагрузка будет большую часть времени и данная отметка поможет нам быстрее запускать дополнительные
  # поды и начать разогревать кэш что позволит иметь низкую нагрузку на каждом быстрее
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageValue: 100m
  - type: Resource
    resource:
      name: memory
      targetAverageValue: 128M
